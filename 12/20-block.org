* ブロック
  ブロックはRubyの大きな特徴のひとつ。
  さまざまな所でつかわれるが、すこしわかりにくい概念
* ブロック付き呼び出しとイテレータ
  メソッドのあとに続いて do end や { } をつかう部分がブロック。
  ブロックがつづいてるメソッドがブロック付き呼び出し。
  使われ方としては
  - イテレータ
  - その他
** ブロック付き呼び出しをつかったくりかえし。
   - Integer.times
   - *.each

   ブロックには
   - 繰り返しの度にかわる項目  |element|
   - くりかえしたい処理 do - end
   のふたつを記述する
** 後処理をはぶくためのブロック
   open("hoge.txt") do |io|
     io.read
   end

   従来の書き方
   fd = open("hoge.txt")
   fd.read
   fd.close # < ブロックの場合は自動的にしてくれる
** 具体的な処理を記述するためのブロック
   例:並びかえ
   並び換えをおこなう場合さまざまな観点でならびかえが可能
   - 辞書順
   - 文字の長さ順

* ブロック付きメソッドをつくる
  - yieldを使うとうけとったブロックを利用できる
  - 引数に &block を追加することで ブロックを変数に代入して扱える
  - ブロックがあるかどうかは block_given? で確認可能
    - &blockを利用した場合は block.nil? でも確認可能
** ブロックの渡し方
   do endをつかわずにブロックを渡すことが可能
   Procオブジェクトを作成し、これを渡す。
   渡す際にはブロックであることを伝えるために &をつける

** Procオブジェクト
   いわゆる関数オブジェクト
   作り方は三種類
   - Proc.new { }
   - proc { }
   - lambda { }
   lambda は多少機能に
   ややこしいかもだけど Methodオブジェクトも存在
